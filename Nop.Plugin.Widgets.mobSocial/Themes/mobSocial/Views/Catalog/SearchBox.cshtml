@model SearchBoxModel
@using Nop.Web.Models.Catalog;

@using (Html.BeginRouteForm("ProductSearch", FormMethod.Get, new { onsubmit = "return check_small_search_form()" }))
{
    <div class="search-box">
        <span class="search-box-label">Search</span>

        <div class="search-box-border">


            <select id="searchTypeDropDown">
                <option>Store</option>
                <option>@T("SearchDropdown.PeopleSearchText")</option>
                <option>@T("SearchDropdown.EventPageSearchText")</option>
            </select>

            <input type="text" class="search-box-text" id="small-searchterms" @(Model.AutoCompleteEnabled ? Html.Raw(" autocomplete=\"off\"") : null) value="" name="q" />
            <input type="submit" class="button-1 search-box-button" value="Go" />
        </div>

        <script type="text/javascript">

            function check_small_search_form() {
                var search_terms = $("#small-searchterms");
                if (search_terms.val() == "") {
                    alert('@T("Search.EnterSearchTerms")');
                    search_terms.focus();
                    return false;
                }

                return true;
            }

            @*function RenderProductItem(ul, item) {
        var t = item.label;
        //html encode
        t = htmlEncode(t);
        return $("<li></li>")
            .data("item.autocomplete", item)
            .append("<a>@(Model.ShowProductImagesInSearchAutoComplete ? Html.Raw("<img src='\" + item.productpictureurl + \"'>") : null )" + t + "</a>")
            .appendTo(ul);
    }*@

            @if (Model.AutoCompleteEnabled)
                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                        <text>
            $(function () {
                $('#small-searchterms').autocomplete(productSearchOptions)
                .data("ui-autocomplete")
                    ._renderItem = renderProductItem;


                //TODO: Find workaround when running in IE Compatibility mode and calling selectmenu or wait for jQuery UI or IE team to fix this.
                $('#searchTypeDropDown').selectmenu({
                    change: function(event, ui) {
                        var searchType = $(this).val();
                        setupSearchType(searchType);
                        $('.search-box-text').focus();
                    }
                });



            });

            </text>
                                                                                                                                                                                                                                                                                                    }


            $('.search-type-button, .arrow-s .search-dropdown-arrow').click(function() {


            });
            //alert($('.search-type-selection').text());

            setupSearchType($('.search-type-selection').text());




            function setupSearchType(searchType) {
                if (searchType == "Store") {
                    $('#small-searchterms').autocomplete(productSearchOptions)
                        .data("ui-autocomplete")._renderItem = renderProductItem;
                } else if (searchType == "@T("SearchDropdown.PeopleSearchText")") {
                    $('#small-searchterms').autocomplete(peopleSearchOptions)
                        .data("ui-autocomplete")._renderItem = renderPeopleItem;
                } else if (searchType == "@T("SearchDropdown.EventPageSearchText")") {
                    $('#small-searchterms').autocomplete(eventSearchOptions)
                        .data("ui-autocomplete")._renderItem = renderEventItem;
                }
            };


            $('.search-type-button').mouseover(function() {
                $('.search-dropdown-arrow').addClass('search-dropdown-arrow-hover');
            }).mouseout(function() {
                $('.search-dropdown-arrow').removeClass('search-dropdown-arrow-hover');
            });

            var productSearchOptions = {
                delay: 500,
                minLength: @(Model.SearchTermMinimumLength.ToString()),
                source: '@(Url.RouteUrl("ProductSearchAutoComplete"))',
                select: function(event, ui) {
                    $("#small-searchterms").val(ui.item.label);
                    setLocation(ui.item.producturl);
                    return false;
                }
            };

            var eventSearchOptions = {
                delay: 500,
                minLength: @(Model.SearchTermMinimumLength.ToString()),
                source: '@(Url.RouteUrl("EventPageSearchAutoComplete"))',
                select: function(event, ui) {
                    $("#small-searchterms").val(ui.item.Name);
                    setLocation(ui.item.Name);
                    return false;
                },
                open: function() {
                    $('.ui-menu').css({
                        border: '1px solid #333333',
                        'border-radius': '0px',
                        width: 300
                    });
                }
            };


            var peopleSearchOptions = {
                delay: 500,
                minLength: @(Model.SearchTermMinimumLength.ToString()),
                source: '@(Url.RouteUrl("PeopleSearchAutoComplete"))',
                select: function(event, ui) {
                    $("#small-searchterms").val(ui.item.label);
                    setLocation(ui.item.ProfileUrl);
                    return false;
                },
                open: function() {
                    $('.ui-menu').css({
                        border: '1px solid #333333',
                        'border-radius': '0px',
                        width: 300
                    });
                }
            };

            function renderProductItem(ul, item) {
                t = htmlEncode(t);
                return $("<li></li>")
                    .data("item.autocomplete", item)
                    .append('<a href="' + item.ProfileUrl + '"><div class="people-search-box-thumbnail-container"><img src="' + item.PictureUrl +
                        '"></div><span class="title">' + t + '</span></a>')
                    .appendTo(ul);
            };

            function renderPeopleItem(ul, item) {
                var t = item.DisplayName;
                //html encode
                t = htmlEncode(t);
                return $("<li></li>")
                    .data("item.autocomplete", item)
                    .append('<a href="' + item.ProfileUrl + '"><div class="people-search-box-thumbnail-container"><img src="' + item.PictureUrl +
                        '"></div><span class="title">' + t + '</span></a>')
                    .appendTo(ul);
            };

            function renderEventItem(ul, item) {
                var t = item.DisplayName;

                //html encode
                t = htmlEncode(t);
                return $("<li></li>")
                    .data("item.autocomplete", item)
                    .append('<a href="' + item.Url + '"><div class="people-search-box-thumbnail-container"><img src="' + item.Name +
                        '"></div><span class="title">' + t + '</span></a>')
                    .appendTo(ul);
            };

        </script>
    </div>
}

