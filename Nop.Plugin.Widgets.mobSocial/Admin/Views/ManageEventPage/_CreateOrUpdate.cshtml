@model Nop.Plugin.Widgets.MobSocial.Models.EventPageModel
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)
<div id="product-edit">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            @T("Admin.MobSocial.EventPage.Info")
        </li>
        <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
            @T("Admin.MobSocial.EventPage.Pictures")
        </li>
        <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
            @T("Admin.MobSocial.EventPage.Hotels")
        </li>
        <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex())>
            @T("Admin.MobSocial.EventPage.Hosts")
        </li>
        <li @Html.RenderSelectedTabIndex(4, GetSelectedTabIndex())>
            @T("Admin.MobSocial.EventPage.Attendance")
        </li>
        @*
            TODO: Support for multiple stores later
            <li @Html.RenderSelectedTabIndex(10, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Stores")
        </li>*@
        @Html.Widget("admin-event-page-tab")

        
    </ul>
    <div>
        @TabInfo()
    </div>
    
    <div>
        Pictures
        @*@TabPictures()*@
    </div>
    <div>
        Hotels
        
    </div>
    <div>
        Hosts
        
    </div>
    
    <div>
        Attendance<br />
        Going<br />
        Maybe<br />
        Declined<br />
    </div>
     
        
</div>
<script>
    $(document).ready(function () {
        $("#product-edit").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });
    });
</script>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "product-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

@helper TabInfo()
{ 
    @Html.Partial("_CreateOrUpdate.Info", Model)
}
@* 
@helper TabSeo()
{
    @Html.Partial("_CreateOrUpdate.SEO", Model)
}
@helper TabCategories()
{
    @Html.Partial("_CreateOrUpdate.Categories", Model)
}
@helper TabManufacturers()
{
    @Html.Partial("_CreateOrUpdate.Manufacturers", Model)
}
    *@
@*@helper TabPictures()
{
    @Html.Partial("_CreateOrUpdate.Pictures", Model)
}*@
@*@helper TabSpecificationAttributes()
{
    @Html.Partial("_CreateOrUpdate.SpecificationAttributes", Model)
}
@helper TabAcl()
{
    @Html.Partial("_CreateOrUpdate.Acl", Model)
}
@helper TabStores()
{
    @Html.Partial("_CreateOrUpdate.Stores", Model)
}

@helper TabTierPrices()
{
    @Html.Partial("_CreateOrUpdate.TierPrices", Model)
}
@helper TabProductAttributes()
{
    @Html.Partial("_CreateOrUpdate.ProductAttributes", Model)
}
@helper TabDiscounts()
{
    @Html.Partial("_CreateOrUpdate.Discounts", Model)
}
@helper TabRelatedProducts()
{
    @Html.Partial("_CreateOrUpdate.RelatedProducts", Model)
}
@helper TabCrossSells()
{
    @Html.Partial("_CreateOrUpdate.CrossSells", Model)
}
@helper TabAssociatedProducts()
{
    @Html.Partial("_CreateOrUpdate.AssociatedProducts", Model)
}
@helper TabPurchasedWithOrders()
{
    @Html.Partial("_CreateOrUpdate.PurchasedWithOrders", Model)
}*@

